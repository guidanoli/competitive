#!/usr/bin/env bash

# Exit on error
set -e

# Program variables
export programpath=$(readlink -f "${BASH_SOURCE[0]}")
export programname=$(basename "$programpath")
export programroot=$(dirname $(dirname "$programpath"))
export programtitle="Competitive Programming Toolkit"
export programversion="0.1-dev"

# If missing command
if [[ $# -eq 0 || "$1" == "--help" ]]; then

	# print usage information
	echo "$programtitle"
	echo ""
	echo "Usage: $programname <command>"
	echo "       $programname --help"
	echo "       $programname --version"
	echo ""
	echo "Commands"
	echo "--------"
	echo ""
	echo "clear              clear temporary files"
	echo "clip               copy program to clipboard"
	echo "debug              debug program"
	echo "edit               edit program with vim"
	echo "init <language>    set current language"
	echo "list               list all projects"
	echo "load <project>     load project"
	echo "path               print program path"
	echo "run                run program"
	echo "save <project>     save project"
	echo ""
	echo "Environment variables"
	echo "---------------------"
	echo ""
	echo "CFLAGS             c compiler flags"
	echo "CPPFLAGS           c++ compiler flags"
	echo "CSFLAGS            c# compiler flags"
	echo "EDITOR             program editor (default: vim)"
	echo "HSFLAGS            haskell compiler flags"
	echo "JAVACLASS          java class name"
	echo ""

elif [[ "$1" == "--version" ]]; then

	# print version
	echo "$programversion"

else

	# Save command
	command="$1"
	shift

	# If base command exists
	if [[ -f "$programroot/libexec/base/$command" ]]; then

		# then push root directory
		pushd "$programroot" > /dev/null

		# source the base command
		source "libexec/base/$command"

		# and pop directory
		popd > /dev/null

	else
		# else exit
		source "$programroot/libexec/err/6"
	fi

fi
