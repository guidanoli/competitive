#!/usr/bin/env bash

# T <command> [<stderr-pattern> [<stdout-pattern> [<message>]]]
# asserts <command> succeeds
# and that stderr matches <stderr-pattern>
# and that stdout matches <stdout-pattern>
# prints <message> with PASS or FAIL tag
T() {
	command=$1
	shift

	if [ $# -gt 0 ]; then
		stderr_pattern=$1
		shift
	else
		stderr_pattern=""
	fi

	if [ $# -gt 0 ]; then
		stdout_pattern=$1
		shift
	else
		stdout_pattern=""
	fi

	if [ $# -gt 0 ]; then
		message=$1
		shift
	else
		message=$command
	fi

	stdout=$(tempfile)
	stderr=$(tempfile)

	print_fail_message() {
		echo -e "\r[ \e[1;31mFAIL\e[1;0m ] $message"
	}

	print_pass_message() {
		echo -e "\r[ \e[1;32mPASS\e[1;0m ] $message"
	}

	print_stdout_and_stderr() {
		[ -s "$stdout" ] && echo -e "\e[1;33mstdout\e[1;0m:" 1>&2 && cat "$stdout" | sed 's/^\(.*\r\)*/\t/' 1>&2
		[ -s "$stderr" ] && echo -e "\e[1;33mstderr\e[1;0m:" 1>&2 && cat "$stderr" | sed 's/^\(.*\r\)*/\t/' 1>&2
		rm "$stdout" "$stderr"
	}

	printf "[      ] $message"

	eval "$command" 1>"$stdout" 2>"$stderr"
	exitcode=$?

	if [ $exitcode -ne 0 ]; then

		print_fail_message

		echo "Exit code of command '$command' was $exitcode" 1>&2

		print_stdout_and_stderr
		
		exit 1
	fi

	if [ ! -z "$stderr_pattern" ] && ! (cat "$stderr" | grep -q -- "$stderr_pattern") ; then

		print_fail_message

		echo "Standard error of command '$command' doesn't match pattern '$stderr_pattern'" 1>&2

		print_stdout_and_stderr
		
		exit 1

	fi

	if [ ! -z "$stdout_pattern" ] && ! (cat "$stdout" | grep -q -- "$stdout_pattern") ; then

		print_fail_message

		echo "Standard output of command '$command' doesn't match pattern '$stdout_pattern'" 1>&2

		print_stdout_and_stderr
		
		exit 1

	fi

	print_pass_message

	rm "$stdout" "$stderr"
}

# Asserts command fails
# See function T
F() {
	command="! ($1)"
	shift

	T "$command" "$@"
}

# END
# End test case
END() {
	endtime=$(date +%s.%N)
	runtime=$(echo "$endtime - $starttime" | bc -l)
	echo "[ #### ] Total elapsed time: $runtime s"
}

echo "[ #### ] Test script: $0"

starttime=$(date +%s.%N)
