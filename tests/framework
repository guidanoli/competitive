#!/usr/bin/env bash

# T <command> [<pattern> [<message>]]
# asserts <command> succeeds
# and that output matches <pattern>
# prints <message> with PASS or FAIL tag
T() {
	command=$1
	shift
	
	if [ $# -gt 0 ]; then
		newcommand="($command 2>&1) | grep -q -- \"$1\""
		shift
	else
		newcommand=$command
	fi

	if [ $# -gt 0 ]; then
		message=$1
		shift
	else
		message=$command
	fi
	
	printf "[      ] $message"

	if eval "$newcommand" >/dev/null 2>&1; then
		echo -e "\r[ \e[1;32mPASS\e[1;0m ] $message"
	else
		echo -e "\r[ \e[1;31mFAIL\e[1;0m ] $message"
		exit 1
	fi 
}

# F <command> [<pattern> [<message>]]
# asserts <command> fails
# and that output matches <pattern>
# prints <message> with PASS or FAIL tag
F() {
	if [ $# -gt 1 ]; then
		T "! ($1)" "$2"
	else
		T "! ($1)"
	fi
}

# END
# End test case
END() {
	endtime=$(date +%s.%N)
	runtime=$(echo "$endtime - $starttime" | bc -l)
	echo "[ #### ] Total elapsed time: $runtime s"
}

echo "[ #### ] Test script: $0"

starttime=$(date +%s.%N)
