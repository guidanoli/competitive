#!/usr/bin/env bash

source tests/framework

BEGIN_TEST

# has_routines [<command1> [<command2> ...]]
has_routines()
{
	for command
	do
		if ! libexec/has-routine "$command"
		then
			SKIP "'$command' not supported"
			return 1
		fi		
	done

	return 0
}

WRAP T 'cptk init c'
WRAP F 'cptk run' 'No program'
WRAP F 'cptk debug' 'No program'

if has_routines copy
then
	WRAP F 'cptk copy' 'No program'
fi

WRAP F 'cptk save x' 'No program'

WRAP F 'cptk ""' 'Unknown command'
WRAP F 'cptk .' 'Unknown command'
WRAP F 'cptk ..' 'Unknown command'
WRAP F 'cptk base' 'Unknown command'
WRAP F 'cptk base/..' 'Unknown command'

WRAP F 'cptk init' 'Missing <language> argument'
WRAP F 'cptk init ""' 'Unknown language'
WRAP F 'cptk init .' 'Unknown language'
WRAP F 'cptk init ..' 'Unknown language'
WRAP F 'cptk init lib' 'Unknown language'
WRAP F 'cptk init lib/c' 'Unknown language'

WRAP T 'echo test > temp'
WRAP T 'cp temp "$(cptk path)"'

if has_routines copy paste
then
	WRAP T 'cptk copy'
	WRAP T 'rm "$(cptk path)"'
	WRAP T 'cptk paste'
	WRAP T '[[ -f $(cptk path) ]]'
	WRAP T 'diff temp "$(cptk path)"'
fi

WRAP T 'cptk save test' # new program
WRAP T 'cptk save test' # override program
WRAP T 'cptk list | grep ^test$'
WRAP T 'rm "$(cptk path)"'
WRAP T 'cptk open test'
WRAP T '[[ -f $(cptk path) ]]'
WRAP T 'diff temp "$(cptk path)"'
WRAP T 'cptk remove test'
WRAP F 'cptk list | grep ^test$'
WRAP F 'cptk remove test' 'Unknown program'
WRAP F 'cptk open test' 'Unknown program'

WRAP T 'touch "$(cptk path)"'
WRAP F 'cptk save' 'Missing <project> argument'
WRAP F 'cptk open' 'Missing <project> argument'
WRAP F 'cptk remove' 'Missing <project> argument'

WRAP F 'cptk save algo/assim' 'Invalid program name'
WRAP F 'cptk save algo/' 'Invalid program name'
WRAP F 'cptk save /' 'Invalid program name'
WRAP F 'cptk save ""' 'Invalid program name'
WRAP F 'cptk save .' 'Invalid program name'
WRAP F 'cptk save ..' 'Invalid program name'
WRAP T 'cptk save ...'
WRAP T 'cptk remove ...'

END_TEST

