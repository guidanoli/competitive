#!/usr/bin/env bash

source tests/framework

BEGIN_TEST

# hascommands [<commands>]
hascommands()
{
	for command in "$@"
	do
		if ! cptk --help | grep -q "^  $command "
		then
			echo -e "[ \e[1;34mSKIP\e[1;0m ] '$command' not supported"
			return 1
		fi		
	done

	return 0
}

T 'cptk'
T 'cptk --version'
T 'cptk --help'

T 'rm -f etc/lang'

F 'cptk path' 'No language is set'
F 'cptk run' 'No language is set'
F 'cptk debug' 'No language is set'

if hascommands edit
then
	F 'cptk edit' 'No language is set'
fi

if hascommands copy
then
	F 'cptk copy' 'No language is set'
fi

if hascommands paste
then
	F 'cptk paste' 'No language is set'
fi

F 'cptk list' 'No language is set'
F 'cptk open x' 'No language is set'
F 'cptk save x' 'No language is set'
F 'cptk remove x' 'No language is set'

T 'cptk init c'
T 'rm -f "$(cptk path)"'
F 'cptk run' 'No program'
F 'cptk debug' 'No program'

if hascommands copy
then
	F 'cptk copy' 'No program'
fi

F 'cptk save x' 'No program'

F 'cptk ""' 'Unknown command'
F 'cptk .' 'Unknown command'
F 'cptk ..' 'Unknown command'
F 'cptk base' 'Unknown command'
F 'cptk base/..' 'Unknown command'

F 'cptk init' 'Missing <language> argument'
F 'cptk init ""' 'Unknown language'
F 'cptk init .' 'Unknown language'
F 'cptk init ..' 'Unknown language'
F 'cptk init lib' 'Unknown language'
F 'cptk init lib/c' 'Unknown language'

if cptk list | grep -q ^test$
then
	T 'cptk remove test'
fi

T 'echo test > etc/test'
T 'cp etc/test "$(cptk path)"'

if hascommands copy paste
then
	T 'cptk copy'
	T 'rm "$(cptk path)"'
	T 'cptk paste'
	T '[[ -f $(cptk path) ]]'
	T 'diff etc/test "$(cptk path)"'
fi

T 'cptk save test'
T 'cptk save test' # override 
T 'cptk list | grep ^test$'
T 'rm "$(cptk path)"'
T 'cptk open test'
T '[[ -f $(cptk path) ]]'
T 'diff etc/test "$(cptk path)"'
T 'cptk remove test'
F 'cptk list | grep ^test$'
F 'cptk remove test' 'Unknown program'
F 'cptk open test' 'Unknown program'
T 'rm etc/test'

T 'touch $(cptk path)'
F 'cptk save' 'Missing <project> argument'
F 'cptk open' 'Missing <project> argument'
F 'cptk remove' 'Missing <project> argument'

F 'cptk save algo/assim' 'Invalid program name'
F 'cptk save algo/' 'Invalid program name'
F 'cptk save /' 'Invalid program name'
F 'cptk save ""' 'Invalid program name'
F 'cptk save .' 'Invalid program name'
F 'cptk save ..' 'Invalid program name'
T 'cptk save ...'
T 'cptk remove ...'

END_TEST
